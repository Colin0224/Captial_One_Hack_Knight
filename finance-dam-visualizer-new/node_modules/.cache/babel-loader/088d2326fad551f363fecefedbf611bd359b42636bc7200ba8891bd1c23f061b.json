{"ast":null,"code":"var _jsxFileName = \"/Users/luckyhappyfish/repos/Captial_One_Hack_Knight/finance-dam-visualizer-new/src/components/visualizations/DamVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: linear-gradient(180deg, #1a1a2e 0%, #16213e 100%);\n  padding: 2rem;\n  border-radius: 16px;\n  margin-bottom: 2rem;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n  color: #fff;\n  width: 100%;\n`;\n_c = VisualizationContainer;\nconst Title = styled.h3`\n  margin-bottom: 1rem;\n  text-align: center;\n`;\n_c2 = Title;\nconst Description = styled.p`\n  color: var(--text-dim);\n  text-align: center;\n  max-width: 800px;\n  margin-bottom: 2rem;\n`;\n_c3 = Description;\nconst DamContainer = styled.div`\n  width: 100%;\n  height: 300px;\n  position: relative;\n  background: linear-gradient(180deg, #0f2027 0%, #203a43 50%, #2c5364 100%);\n  border-radius: 16px;\n  overflow: hidden;\n  margin-bottom: 2rem;\n  box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.5);\n`;\n_c4 = DamContainer;\nconst Pond = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: ${props => props.level}%;\n  background: linear-gradient(0deg, rgba(0, 112, 240, 0.8) 0%, rgba(72, 198, 239, 0.6) 100%);\n  transition: height 1s ease-in-out;\n  border-radius: 0 0 16px 16px;\n  box-shadow: inset 0 2px 10px rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(5px);\n`;\n_c5 = Pond;\nconst ripple = keyframes`\n  0% {\n    transform: scale(1);\n    opacity: 0.6;\n  }\n  100% {\n    transform: scale(4);\n    opacity: 0;\n  }\n`;\nconst PondRipple = styled.div`\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: rgba(255, 255, 255, 0.4);\n  border-radius: 50%;\n  top: ${props => props.top}%;\n  left: ${props => props.left}%;\n  animation: ${ripple} 3s infinite ease-out;\n  animation-delay: ${props => props.delay}s;\n`;\n_c6 = PondRipple;\nconst float = keyframes`\n  0%, 100% { transform: translateY(0) translateX(0); }\n  25% { transform: translateY(-3px) translateX(3px); }\n  50% { transform: translateY(-5px) translateX(-2px); }\n  75% { transform: translateY(-3px) translateX(1px); }\n`;\nconst CloudContainer = styled.div`\n  position: absolute;\n  top: ${props => props.top}%;\n  left: ${props => props.left}%;\n  animation: ${float} ${props => props.floatDuration}s infinite ease-in-out;\n  opacity: ${props => props.opacity};\n  transform: scale(${props => props.scale});\n  z-index: 10;\n`;\n_c7 = CloudContainer;\nconst Cloud = styled.div`\n  position: relative;\n  width: 50px;\n  height: 20px;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  \n  &:before, &:after {\n    content: '';\n    position: absolute;\n    background: rgba(255, 255, 255, 0.8);\n    border-radius: 50%;\n  }\n  \n  &:before {\n    width: 25px;\n    height: 25px;\n    top: -10px;\n    left: 10px;\n  }\n  \n  &:after {\n    width: 20px;\n    height: 20px;\n    top: -8px;\n    right: 10px;\n  }\n`;\n_c8 = Cloud;\nconst rainDrop = keyframes`\n  0% {\n    transform: translateY(0) scale(1);\n    opacity: 0.8;\n  }\n  80% {\n    transform: translateY(${props => props.distance}px) scale(0.9);\n    opacity: 0.6;\n  }\n  100% {\n    transform: translateY(${props => props.distance}px) scale(0);\n    opacity: 0;\n  }\n`;\nconst RainDrop = styled.div`\n  position: absolute;\n  top: ${props => props.top}px;\n  left: ${props => props.left}px;\n  width: 2px;\n  height: 8px;\n  background: rgba(120, 213, 255, 0.8);\n  border-radius: 3px;\n  animation: ${rainDrop} ${props => props.duration}s linear infinite;\n  animation-delay: ${props => props.delay}s;\n`;\n_c9 = RainDrop;\nconst flowOut = keyframes`\n  0% {\n    width: 0;\n    opacity: 0.8;\n  }\n  100% {\n    width: ${props => props.length}px;\n    opacity: 0;\n  }\n`;\nconst SpendingStream = styled.div`\n  position: absolute;\n  bottom: ${props => props.bottom}px;\n  right: 0;\n  height: ${props => props.height}px;\n  background: ${props => props.color};\n  border-radius: 4px 0 0 4px;\n  animation: ${flowOut} ${props => props.duration}s linear infinite;\n  animation-delay: ${props => props.delay}s;\n  opacity: 0.7;\n`;\n_c10 = SpendingStream;\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 1rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 1rem;\n  width: 100%;\n  margin-top: 1rem;\n`;\n_c11 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 1rem;\n  \n  span {\n    width: 12px;\n    height: 12px;\n    background: ${props => props.color};\n    margin-right: 8px;\n    display: inline-block;\n    border-radius: 3px;\n  }\n`;\n_c12 = LegendItem;\nconst FinancialMetrics = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  width: 100%;\n  margin-top: 1rem;\n`;\n_c13 = FinancialMetrics;\nconst MetricCard = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  padding: 1rem;\n  border-radius: 12px;\n  margin: 0.5rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  width: 180px;\n  text-align: center;\n  backdrop-filter: blur(5px);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n  }\n  \n  h4 {\n    margin-top: 0;\n    font-size: 0.9rem;\n    font-weight: 500;\n    color: rgba(255, 255, 255, 0.7);\n  }\n  \n  p {\n    font-size: 1.3rem;\n    font-weight: 700;\n    margin-bottom: 0;\n    color: #fff;\n  }\n`;\n_c14 = MetricCard;\nconst DamVisualization = ({\n  title = \"Financial Dam\",\n  description = \"Visualize your finances as a water dam with inflows (income) and outflows (expenses)\",\n  financialData = {},\n  spendingCategories = [],\n  showMetrics = true,\n  showLegend = true,\n  height = 300\n}) => {\n  _s();\n  const [waterLevel, setWaterLevel] = useState(50);\n  const [incomeRate, setIncomeRate] = useState(5);\n  const [expenseRate, setExpenseRate] = useState(3);\n\n  // Extract financial metrics from data\n  const totalAssets = financialData.totalAssets || 100000;\n  const totalLiabilities = financialData.totalLiabilities || 40000;\n  const netWorth = financialData.netWorth || totalAssets - totalLiabilities;\n  const monthlyIncome = financialData.monthlyIncome || 5000;\n  const monthlyExpenses = financialData.monthlyExpenses || 3000;\n\n  // Generate fixed position clouds\n  const cloudPositions = [{\n    top: 5,\n    left: 15\n  }, {\n    top: 8,\n    left: 35\n  }, {\n    top: 6,\n    left: 55\n  }, {\n    top: 10,\n    left: 75\n  }, {\n    top: 15,\n    left: 25\n  }, {\n    top: 12,\n    left: 65\n  }, {\n    top: 18,\n    left: 45\n  }, {\n    top: 7,\n    left: 85\n  }];\n\n  // Use fixed positions with some randomness for animation\n  const clouds = cloudPositions.slice(0, 3 + Math.min(incomeRate, 5)).map((pos, i) => ({\n    id: i,\n    top: pos.top,\n    left: pos.left,\n    floatDuration: 10 + Math.random() * 20,\n    scale: 0.8 + Math.random() * 0.4,\n    opacity: 0.6 + Math.random() * 0.4\n  }));\n\n  // Generate raindrops from clouds with better alignment\n  const generateRaindrops = () => {\n    const drops = [];\n    clouds.forEach(cloud => {\n      const dropCount = incomeRate * 2;\n      for (let i = 0; i < dropCount; i++) {\n        drops.push({\n          id: `${cloud.id}-${i}`,\n          top: cloud.top * 4 + 20,\n          // Position below the cloud\n          left: cloud.left + (Math.random() * 6 - 3),\n          // Much less randomization\n          duration: 1 + Math.random() * 0.5,\n          delay: Math.random() * 3,\n          distance: height - waterLevel * height / 100 // Make rain stop at water surface\n        });\n      }\n    });\n    return drops;\n  };\n  const raindrops = generateRaindrops();\n\n  // If no spending categories provided, use default ones\n  const defaultSpendingCategories = [{\n    name: 'Housing',\n    color: 'rgba(255, 128, 66, 0.8)',\n    amount: 1200,\n    percentage: 30\n  }, {\n    name: 'Food',\n    color: 'rgba(255, 187, 40, 0.8)',\n    amount: 800,\n    percentage: 20\n  }, {\n    name: 'Transportation',\n    color: 'rgba(136, 132, 216, 0.8)',\n    amount: 400,\n    percentage: 10\n  }, {\n    name: 'Entertainment',\n    color: 'rgba(0, 136, 254, 0.8)',\n    amount: 300,\n    percentage: 7\n  }, {\n    name: 'Utilities',\n    color: 'rgba(0, 196, 159, 0.8)',\n    amount: 500,\n    percentage: 12\n  }];\n  const categories = spendingCategories.length > 0 ? spendingCategories : defaultSpendingCategories;\n  const spendingStreams = categories.map((category, index) => ({\n    id: index,\n    bottom: 20 + index * 50,\n    height: Math.max(2, category.percentage / 3),\n    // Scale height based on percentage\n    duration: 3 + Math.random() * 2,\n    delay: Math.random() * 2,\n    color: category.color,\n    length: 150 + category.percentage * 3 // Longer streams for larger expenses\n  }));\n\n  // Generate ripples\n  const ripples = Array.from({\n    length: 10\n  }, (_, i) => ({\n    id: i,\n    top: 100 - waterLevel + Math.random() * (waterLevel - 10),\n    // Position at water level\n    left: Math.floor(Math.random() * 100),\n    delay: Math.random() * 5\n  }));\n\n  // Calculate water level based on net worth / total assets\n  useEffect(() => {\n    if (totalAssets > 0) {\n      const calculatedLevel = netWorth / totalAssets * 100;\n      setWaterLevel(Math.max(10, Math.min(90, calculatedLevel)));\n    }\n\n    // Calculate flow rates based on income vs expenses\n    if (monthlyIncome > 0) {\n      setIncomeRate(Math.min(10, Math.ceil(monthlyIncome / 1000)));\n    }\n    if (monthlyExpenses > 0) {\n      setExpenseRate(Math.min(10, Math.ceil(monthlyExpenses / 1000)));\n    }\n\n    // Simulate water level changes based on income and expense rates\n    const interval = setInterval(() => {\n      setWaterLevel(prev => {\n        const change = (incomeRate - expenseRate) * 0.1;\n        const newLevel = prev + change;\n        return Math.min(Math.max(newLevel, 10), 90); // Keep between 10% and 90%\n      });\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [totalAssets, netWorth, monthlyIncome, monthlyExpenses, incomeRate, expenseRate]);\n  return /*#__PURE__*/_jsxDEV(VisualizationContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Description, {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DamContainer, {\n      style: {\n        height: `${height}px`\n      },\n      children: [clouds.map(cloud => /*#__PURE__*/_jsxDEV(CloudContainer, {\n        top: cloud.top,\n        left: cloud.left,\n        floatDuration: cloud.floatDuration,\n        scale: cloud.scale,\n        opacity: cloud.opacity,\n        children: /*#__PURE__*/_jsxDEV(Cloud, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this)\n      }, cloud.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Pond, {\n        level: waterLevel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), ripples.map(ripple => /*#__PURE__*/_jsxDEV(PondRipple, {\n        top: ripple.top,\n        left: ripple.left,\n        delay: ripple.delay\n      }, ripple.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)), raindrops.map(drop => /*#__PURE__*/_jsxDEV(RainDrop, {\n        top: drop.top,\n        left: drop.left,\n        duration: drop.duration,\n        delay: drop.delay,\n        distance: drop.distance\n      }, drop.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)), spendingStreams.map(stream => /*#__PURE__*/_jsxDEV(SpendingStream, {\n        bottom: stream.bottom,\n        height: stream.height,\n        duration: stream.duration,\n        delay: stream.delay,\n        color: stream.color,\n        length: stream.length\n      }, stream.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), showLegend && /*#__PURE__*/_jsxDEV(Legend, {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: category.color,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 15\n        }, this), \" \", category.name, \": $\", category.amount]\n      }, category.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }, this), showMetrics && /*#__PURE__*/_jsxDEV(FinancialMetrics, {\n      children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Net Worth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", netWorth.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Total Assets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalAssets.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Total Liabilities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalLiabilities.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Monthly Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", monthlyIncome.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Monthly Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", monthlyExpenses.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n};\n_s(DamVisualization, \"Qm2xJH4nhmIT+DXHwVC6zs6qMGc=\");\n_c15 = DamVisualization;\nexport default DamVisualization;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"VisualizationContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Description\");\n$RefreshReg$(_c4, \"DamContainer\");\n$RefreshReg$(_c5, \"Pond\");\n$RefreshReg$(_c6, \"PondRipple\");\n$RefreshReg$(_c7, \"CloudContainer\");\n$RefreshReg$(_c8, \"Cloud\");\n$RefreshReg$(_c9, \"RainDrop\");\n$RefreshReg$(_c10, \"SpendingStream\");\n$RefreshReg$(_c11, \"Legend\");\n$RefreshReg$(_c12, \"LegendItem\");\n$RefreshReg$(_c13, \"FinancialMetrics\");\n$RefreshReg$(_c14, \"MetricCard\");\n$RefreshReg$(_c15, \"DamVisualization\");","map":{"version":3,"names":["React","useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","VisualizationContainer","div","_c","Title","h3","_c2","Description","p","_c3","DamContainer","_c4","Pond","props","level","_c5","ripple","PondRipple","top","left","delay","_c6","float","CloudContainer","floatDuration","opacity","scale","_c7","Cloud","_c8","rainDrop","distance","RainDrop","duration","_c9","flowOut","length","SpendingStream","bottom","height","color","_c10","Legend","_c11","LegendItem","_c12","FinancialMetrics","_c13","MetricCard","_c14","DamVisualization","title","description","financialData","spendingCategories","showMetrics","showLegend","_s","waterLevel","setWaterLevel","incomeRate","setIncomeRate","expenseRate","setExpenseRate","totalAssets","totalLiabilities","netWorth","monthlyIncome","monthlyExpenses","cloudPositions","clouds","slice","Math","min","map","pos","i","id","random","generateRaindrops","drops","forEach","cloud","dropCount","push","raindrops","defaultSpendingCategories","name","amount","percentage","categories","spendingStreams","category","index","max","ripples","Array","from","_","floor","calculatedLevel","ceil","interval","setInterval","prev","change","newLevel","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","style","drop","stream","toLocaleString","_c15","$RefreshReg$"],"sources":["/Users/luckyhappyfish/repos/Captial_One_Hack_Knight/finance-dam-visualizer-new/src/components/visualizations/DamVisualization.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst VisualizationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: linear-gradient(180deg, #1a1a2e 0%, #16213e 100%);\n  padding: 2rem;\n  border-radius: 16px;\n  margin-bottom: 2rem;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n  color: #fff;\n  width: 100%;\n`;\n\nconst Title = styled.h3`\n  margin-bottom: 1rem;\n  text-align: center;\n`;\n\nconst Description = styled.p`\n  color: var(--text-dim);\n  text-align: center;\n  max-width: 800px;\n  margin-bottom: 2rem;\n`;\n\nconst DamContainer = styled.div`\n  width: 100%;\n  height: 300px;\n  position: relative;\n  background: linear-gradient(180deg, #0f2027 0%, #203a43 50%, #2c5364 100%);\n  border-radius: 16px;\n  overflow: hidden;\n  margin-bottom: 2rem;\n  box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.5);\n`;\n\nconst Pond = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: ${props => props.level}%;\n  background: linear-gradient(0deg, rgba(0, 112, 240, 0.8) 0%, rgba(72, 198, 239, 0.6) 100%);\n  transition: height 1s ease-in-out;\n  border-radius: 0 0 16px 16px;\n  box-shadow: inset 0 2px 10px rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(5px);\n`;\n\nconst ripple = keyframes`\n  0% {\n    transform: scale(1);\n    opacity: 0.6;\n  }\n  100% {\n    transform: scale(4);\n    opacity: 0;\n  }\n`;\n\nconst PondRipple = styled.div`\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: rgba(255, 255, 255, 0.4);\n  border-radius: 50%;\n  top: ${props => props.top}%;\n  left: ${props => props.left}%;\n  animation: ${ripple} 3s infinite ease-out;\n  animation-delay: ${props => props.delay}s;\n`;\n\nconst float = keyframes`\n  0%, 100% { transform: translateY(0) translateX(0); }\n  25% { transform: translateY(-3px) translateX(3px); }\n  50% { transform: translateY(-5px) translateX(-2px); }\n  75% { transform: translateY(-3px) translateX(1px); }\n`;\n\nconst CloudContainer = styled.div`\n  position: absolute;\n  top: ${props => props.top}%;\n  left: ${props => props.left}%;\n  animation: ${float} ${props => props.floatDuration}s infinite ease-in-out;\n  opacity: ${props => props.opacity};\n  transform: scale(${props => props.scale});\n  z-index: 10;\n`;\n\nconst Cloud = styled.div`\n  position: relative;\n  width: 50px;\n  height: 20px;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  \n  &:before, &:after {\n    content: '';\n    position: absolute;\n    background: rgba(255, 255, 255, 0.8);\n    border-radius: 50%;\n  }\n  \n  &:before {\n    width: 25px;\n    height: 25px;\n    top: -10px;\n    left: 10px;\n  }\n  \n  &:after {\n    width: 20px;\n    height: 20px;\n    top: -8px;\n    right: 10px;\n  }\n`;\n\nconst rainDrop = keyframes`\n  0% {\n    transform: translateY(0) scale(1);\n    opacity: 0.8;\n  }\n  80% {\n    transform: translateY(${props => props.distance}px) scale(0.9);\n    opacity: 0.6;\n  }\n  100% {\n    transform: translateY(${props => props.distance}px) scale(0);\n    opacity: 0;\n  }\n`;\n\nconst RainDrop = styled.div`\n  position: absolute;\n  top: ${props => props.top}px;\n  left: ${props => props.left}px;\n  width: 2px;\n  height: 8px;\n  background: rgba(120, 213, 255, 0.8);\n  border-radius: 3px;\n  animation: ${rainDrop} ${props => props.duration}s linear infinite;\n  animation-delay: ${props => props.delay}s;\n`;\n\nconst flowOut = keyframes`\n  0% {\n    width: 0;\n    opacity: 0.8;\n  }\n  100% {\n    width: ${props => props.length}px;\n    opacity: 0;\n  }\n`;\n\nconst SpendingStream = styled.div`\n  position: absolute;\n  bottom: ${props => props.bottom}px;\n  right: 0;\n  height: ${props => props.height}px;\n  background: ${props => props.color};\n  border-radius: 4px 0 0 4px;\n  animation: ${flowOut} ${props => props.duration}s linear infinite;\n  animation-delay: ${props => props.delay}s;\n  opacity: 0.7;\n`;\n\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 1rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 1rem;\n  width: 100%;\n  margin-top: 1rem;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 1rem;\n  \n  span {\n    width: 12px;\n    height: 12px;\n    background: ${props => props.color};\n    margin-right: 8px;\n    display: inline-block;\n    border-radius: 3px;\n  }\n`;\n\nconst FinancialMetrics = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  width: 100%;\n  margin-top: 1rem;\n`;\n\nconst MetricCard = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  padding: 1rem;\n  border-radius: 12px;\n  margin: 0.5rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  width: 180px;\n  text-align: center;\n  backdrop-filter: blur(5px);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n  }\n  \n  h4 {\n    margin-top: 0;\n    font-size: 0.9rem;\n    font-weight: 500;\n    color: rgba(255, 255, 255, 0.7);\n  }\n  \n  p {\n    font-size: 1.3rem;\n    font-weight: 700;\n    margin-bottom: 0;\n    color: #fff;\n  }\n`;\n\nconst DamVisualization = ({ \n  title = \"Financial Dam\",\n  description = \"Visualize your finances as a water dam with inflows (income) and outflows (expenses)\",\n  financialData = {},\n  spendingCategories = [],\n  showMetrics = true,\n  showLegend = true,\n  height = 300\n}) => {\n  const [waterLevel, setWaterLevel] = useState(50);\n  const [incomeRate, setIncomeRate] = useState(5);\n  const [expenseRate, setExpenseRate] = useState(3);\n\n  // Extract financial metrics from data\n  const totalAssets = financialData.totalAssets || 100000;\n  const totalLiabilities = financialData.totalLiabilities || 40000;\n  const netWorth = financialData.netWorth || (totalAssets - totalLiabilities);\n  const monthlyIncome = financialData.monthlyIncome || 5000;\n  const monthlyExpenses = financialData.monthlyExpenses || 3000;\n\n  // Generate fixed position clouds\n  const cloudPositions = [\n    { top: 5, left: 15 },\n    { top: 8, left: 35 },\n    { top: 6, left: 55 },\n    { top: 10, left: 75 },\n    { top: 15, left: 25 },\n    { top: 12, left: 65 },\n    { top: 18, left: 45 },\n    { top: 7, left: 85 }\n  ];\n  \n  // Use fixed positions with some randomness for animation\n  const clouds = cloudPositions.slice(0, 3 + Math.min(incomeRate, 5)).map((pos, i) => ({\n    id: i,\n    top: pos.top,\n    left: pos.left,\n    floatDuration: 10 + Math.random() * 20,\n    scale: 0.8 + Math.random() * 0.4,\n    opacity: 0.6 + Math.random() * 0.4\n  }));\n  \n  // Generate raindrops from clouds with better alignment\n  const generateRaindrops = () => {\n    const drops = [];\n    clouds.forEach(cloud => {\n      const dropCount = incomeRate * 2;\n      for (let i = 0; i < dropCount; i++) {\n        drops.push({\n          id: `${cloud.id}-${i}`,\n          top: cloud.top * 4 + 20, // Position below the cloud\n          left: cloud.left + (Math.random() * 6 - 3), // Much less randomization\n          duration: 1 + Math.random() * 0.5,\n          delay: Math.random() * 3,\n          distance: height - (waterLevel * height / 100) // Make rain stop at water surface\n        });\n      }\n    });\n    return drops;\n  };\n  \n  const raindrops = generateRaindrops();\n  \n  // If no spending categories provided, use default ones\n  const defaultSpendingCategories = [\n    { name: 'Housing', color: 'rgba(255, 128, 66, 0.8)', amount: 1200, percentage: 30 },\n    { name: 'Food', color: 'rgba(255, 187, 40, 0.8)', amount: 800, percentage: 20 },\n    { name: 'Transportation', color: 'rgba(136, 132, 216, 0.8)', amount: 400, percentage: 10 },\n    { name: 'Entertainment', color: 'rgba(0, 136, 254, 0.8)', amount: 300, percentage: 7 },\n    { name: 'Utilities', color: 'rgba(0, 196, 159, 0.8)', amount: 500, percentage: 12 }\n  ];\n  \n  const categories = spendingCategories.length > 0 ? spendingCategories : defaultSpendingCategories;\n  \n  const spendingStreams = categories.map((category, index) => ({\n    id: index,\n    bottom: 20 + (index * 50),\n    height: Math.max(2, category.percentage / 3), // Scale height based on percentage\n    duration: 3 + Math.random() * 2,\n    delay: Math.random() * 2,\n    color: category.color,\n    length: 150 + (category.percentage * 3) // Longer streams for larger expenses\n  }));\n  \n  // Generate ripples\n  const ripples = Array.from({ length: 10 }, (_, i) => ({\n    id: i,\n    top: 100 - waterLevel + Math.random() * (waterLevel - 10), // Position at water level\n    left: Math.floor(Math.random() * 100),\n    delay: Math.random() * 5\n  }));\n\n  // Calculate water level based on net worth / total assets\n  useEffect(() => {\n    if (totalAssets > 0) {\n      const calculatedLevel = (netWorth / totalAssets) * 100;\n      setWaterLevel(Math.max(10, Math.min(90, calculatedLevel)));\n    }\n    \n    // Calculate flow rates based on income vs expenses\n    if (monthlyIncome > 0) {\n      setIncomeRate(Math.min(10, Math.ceil(monthlyIncome / 1000)));\n    }\n    \n    if (monthlyExpenses > 0) {\n      setExpenseRate(Math.min(10, Math.ceil(monthlyExpenses / 1000)));\n    }\n    \n    // Simulate water level changes based on income and expense rates\n    const interval = setInterval(() => {\n      setWaterLevel(prev => {\n        const change = (incomeRate - expenseRate) * 0.1;\n        const newLevel = prev + change;\n        return Math.min(Math.max(newLevel, 10), 90); // Keep between 10% and 90%\n      });\n    }, 2000);\n    \n    return () => clearInterval(interval);\n  }, [totalAssets, netWorth, monthlyIncome, monthlyExpenses, incomeRate, expenseRate]);\n\n  return (\n    <VisualizationContainer>\n      <Title>{title}</Title>\n      <Description>{description}</Description>\n      \n      <DamContainer style={{ height: `${height}px` }}>\n        {/* Clouds */}\n        {clouds.map(cloud => (\n          <CloudContainer \n            key={cloud.id} \n            top={cloud.top} \n            left={cloud.left} \n            floatDuration={cloud.floatDuration}\n            scale={cloud.scale}\n            opacity={cloud.opacity}\n          >\n            <Cloud />\n          </CloudContainer>\n        ))}\n        \n        {/* Pond water */}\n        <Pond level={waterLevel} />\n        \n        {/* Ripples on pond surface */}\n        {ripples.map(ripple => (\n          <PondRipple \n            key={ripple.id} \n            top={ripple.top} \n            left={ripple.left} \n            delay={ripple.delay}\n          />\n        ))}\n        \n        {/* Income rain drops */}\n        {raindrops.map(drop => (\n          <RainDrop \n            key={drop.id} \n            top={drop.top} \n            left={drop.left} \n            duration={drop.duration} \n            delay={drop.delay} \n            distance={drop.distance}\n          />\n        ))}\n        \n        {/* Spending streams */}\n        {spendingStreams.map(stream => (\n          <SpendingStream \n            key={stream.id} \n            bottom={stream.bottom} \n            height={stream.height} \n            duration={stream.duration} \n            delay={stream.delay} \n            color={stream.color} \n            length={stream.length} \n          />\n        ))}\n      </DamContainer>\n      \n      {showLegend && (\n        <Legend>\n          {categories.map(category => (\n            <LegendItem key={category.name} color={category.color}>\n              <span></span> {category.name}: ${category.amount}\n            </LegendItem>\n          ))}\n        </Legend>\n      )}\n      \n      {showMetrics && (\n        <FinancialMetrics>\n          <MetricCard>\n            <h4>Net Worth</h4>\n            <p>${netWorth.toLocaleString()}</p>\n          </MetricCard>\n          <MetricCard>\n            <h4>Total Assets</h4>\n            <p>${totalAssets.toLocaleString()}</p>\n          </MetricCard>\n          <MetricCard>\n            <h4>Total Liabilities</h4>\n            <p>${totalLiabilities.toLocaleString()}</p>\n          </MetricCard>\n          <MetricCard>\n            <h4>Monthly Income</h4>\n            <p>${monthlyIncome.toLocaleString()}</p>\n          </MetricCard>\n          <MetricCard>\n            <h4>Monthly Expenses</h4>\n            <p>${monthlyExpenses.toLocaleString()}</p>\n          </MetricCard>\n        </FinancialMetrics>\n      )}\n    </VisualizationContainer>\n  );\n};\n\nexport default DamVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}