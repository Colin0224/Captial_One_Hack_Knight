{"ast":null,"code":"var _jsxFileName = \"/Users/luckyhappyfish/repos/Captial_One_Hack_Knight/finance-dam-visualizer-new/src/context/DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { db } from '../services/firebase';\nimport { collection, doc, getDoc, setDoc, updateDoc, query, where, getDocs, arrayUnion } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport function useData() {\n  _s();\n  return useContext(DataContext);\n}\n_s(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function DataProvider({\n  children\n}) {\n  _s2();\n  const {\n    currentUser\n  } = useAuth();\n  const [userFinancialData, setUserFinancialData] = useState(null);\n  const [futureScenarios, setFutureScenarios] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [dreamLifeText, setDreamLifeText] = useState('');\n\n  // Load user data when auth state changes\n  useEffect(() => {\n    async function loadUserData() {\n      if (!currentUser) {\n        setUserFinancialData(null);\n        setFutureScenarios([]);\n        setLoading(false);\n        return;\n      }\n      setLoading(true);\n      try {\n        // Get user financial data\n        const userDocRef = doc(db, 'users', currentUser.uid);\n        const userDoc = await getDoc(userDocRef);\n        if (userDoc.exists()) {\n          setUserFinancialData(userDoc.data().financialData || null);\n          setDreamLifeText(userDoc.data().dreamLifeText || '');\n        } else {\n          // Initialize user document if it doesn't exist\n          await setDoc(userDocRef, {\n            email: currentUser.email,\n            createdAt: new Date(),\n            financialData: null,\n            dreamLifeText: ''\n          });\n        }\n\n        // Get future scenarios\n        const scenariosQuery = query(collection(db, 'scenarios'), where('userId', '==', currentUser.uid));\n        const scenarioSnapshot = await getDocs(scenariosQuery);\n        const scenariosData = scenarioSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setFutureScenarios(scenariosData);\n        setError(null);\n      } catch (err) {\n        console.error('Error loading user data:', err);\n        setError('Failed to load user data');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadUserData();\n  }, [currentUser]);\n\n  // Save questionnaire data\n  async function saveQuestionnaireData(data) {\n    if (!currentUser) return;\n    setLoading(true);\n    try {\n      const userDocRef = doc(db, 'users', currentUser.uid);\n      await updateDoc(userDocRef, {\n        financialData: data,\n        lastUpdated: new Date()\n      });\n      setUserFinancialData(data);\n      return true;\n    } catch (err) {\n      console.error('Error saving questionnaire data:', err);\n      setError('Failed to save questionnaire data');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Save dream life text\n  async function saveDreamLifeText(text) {\n    if (!currentUser) return;\n    setLoading(true);\n    try {\n      const userDocRef = doc(db, 'users', currentUser.uid);\n      await updateDoc(userDocRef, {\n        dreamLifeText: text,\n        lastUpdated: new Date()\n      });\n      setDreamLifeText(text);\n      return true;\n    } catch (err) {\n      console.error('Error saving dream life text:', err);\n      setError('Failed to save dream life text');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Save a new future scenario\n  async function saveFutureScenario(scenarioData) {\n    if (!currentUser) return;\n    setLoading(true);\n    try {\n      const scenarioRef = doc(collection(db, 'scenarios'));\n      const newScenario = {\n        userId: currentUser.uid,\n        createdAt: new Date(),\n        ...scenarioData\n      };\n      await setDoc(scenarioRef, newScenario);\n      setFutureScenarios(prev => [...prev, {\n        id: scenarioRef.id,\n        ...newScenario\n      }]);\n      return true;\n    } catch (err) {\n      console.error('Error saving future scenario:', err);\n      setError('Failed to save future scenario');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  }\n  const value = {\n    userFinancialData,\n    futureScenarios,\n    dreamLifeText,\n    loading,\n    error,\n    saveQuestionnaireData,\n    saveDreamLifeText,\n    saveFutureScenario\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s2(DataProvider, \"CZjrGY/539zsJNS/6pgDIOy6z8k=\", false, function () {\n  return [useAuth];\n});\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useAuth","db","collection","doc","getDoc","setDoc","updateDoc","query","where","getDocs","arrayUnion","jsxDEV","_jsxDEV","DataContext","useData","_s","DataProvider","children","_s2","currentUser","userFinancialData","setUserFinancialData","futureScenarios","setFutureScenarios","loading","setLoading","error","setError","dreamLifeText","setDreamLifeText","loadUserData","userDocRef","uid","userDoc","exists","data","financialData","email","createdAt","Date","scenariosQuery","scenarioSnapshot","scenariosData","docs","map","id","err","console","saveQuestionnaireData","lastUpdated","saveDreamLifeText","text","saveFutureScenario","scenarioData","scenarioRef","newScenario","userId","prev","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luckyhappyfish/repos/Captial_One_Hack_Knight/finance-dam-visualizer-new/src/context/DataContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { db } from '../services/firebase';\nimport { \n  collection, doc, getDoc, setDoc, updateDoc, \n  query, where, getDocs, arrayUnion\n} from 'firebase/firestore';\n\nconst DataContext = createContext();\n\nexport function useData() {\n  return useContext(DataContext);\n}\n\nexport function DataProvider({ children }) {\n  const { currentUser } = useAuth();\n  const [userFinancialData, setUserFinancialData] = useState(null);\n  const [futureScenarios, setFutureScenarios] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [dreamLifeText, setDreamLifeText] = useState('');\n\n  // Load user data when auth state changes\n  useEffect(() => {\n    async function loadUserData() {\n      if (!currentUser) {\n        setUserFinancialData(null);\n        setFutureScenarios([]);\n        setLoading(false);\n        return;\n      }\n\n      setLoading(true);\n      try {\n        // Get user financial data\n        const userDocRef = doc(db, 'users', currentUser.uid);\n        const userDoc = await getDoc(userDocRef);\n\n        if (userDoc.exists()) {\n          setUserFinancialData(userDoc.data().financialData || null);\n          setDreamLifeText(userDoc.data().dreamLifeText || '');\n        } else {\n          // Initialize user document if it doesn't exist\n          await setDoc(userDocRef, {\n            email: currentUser.email,\n            createdAt: new Date(),\n            financialData: null,\n            dreamLifeText: ''\n          });\n        }\n\n        // Get future scenarios\n        const scenariosQuery = query(\n          collection(db, 'scenarios'),\n          where('userId', '==', currentUser.uid)\n        );\n        const scenarioSnapshot = await getDocs(scenariosQuery);\n        const scenariosData = scenarioSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        \n        setFutureScenarios(scenariosData);\n        setError(null);\n      } catch (err) {\n        console.error('Error loading user data:', err);\n        setError('Failed to load user data');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    loadUserData();\n  }, [currentUser]);\n\n  // Save questionnaire data\n  async function saveQuestionnaireData(data) {\n    if (!currentUser) return;\n    \n    setLoading(true);\n    try {\n      const userDocRef = doc(db, 'users', currentUser.uid);\n      await updateDoc(userDocRef, {\n        financialData: data,\n        lastUpdated: new Date()\n      });\n      \n      setUserFinancialData(data);\n      return true;\n    } catch (err) {\n      console.error('Error saving questionnaire data:', err);\n      setError('Failed to save questionnaire data');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Save dream life text\n  async function saveDreamLifeText(text) {\n    if (!currentUser) return;\n    \n    setLoading(true);\n    try {\n      const userDocRef = doc(db, 'users', currentUser.uid);\n      await updateDoc(userDocRef, {\n        dreamLifeText: text,\n        lastUpdated: new Date()\n      });\n      \n      setDreamLifeText(text);\n      return true;\n    } catch (err) {\n      console.error('Error saving dream life text:', err);\n      setError('Failed to save dream life text');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Save a new future scenario\n  async function saveFutureScenario(scenarioData) {\n    if (!currentUser) return;\n    \n    setLoading(true);\n    try {\n      const scenarioRef = doc(collection(db, 'scenarios'));\n      \n      const newScenario = {\n        userId: currentUser.uid,\n        createdAt: new Date(),\n        ...scenarioData\n      };\n      \n      await setDoc(scenarioRef, newScenario);\n      \n      setFutureScenarios(prev => [...prev, { id: scenarioRef.id, ...newScenario }]);\n      return true;\n    } catch (err) {\n      console.error('Error saving future scenario:', err);\n      setError('Failed to save future scenario');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const value = {\n    userFinancialData,\n    futureScenarios,\n    dreamLifeText,\n    loading,\n    error,\n    saveQuestionnaireData,\n    saveDreamLifeText,\n    saveFutureScenario\n  };\n\n  return (\n    <DataContext.Provider value={value}>\n      {children}\n    </DataContext.Provider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}