{"ast":null,"code":"var _jsxFileName = \"/Users/franksu/Documents/Personal projects /Captial_One_Hack_Knight/finance-dam-visualizer-new/src/pages/DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { useData } from '../context/DataContext';\n// No auth import needed\nimport DamVisualization from '../components/visualizations/DamVisualization';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  padding: 2rem 1rem;\n  max-width: 1200px;\n  margin: 0 auto;\n  \n  @media (min-width: 768px) {\n    padding: 3rem 2rem;\n  }\n`;\n_c = PageContainer;\nconst PageHeader = styled.div`\n  margin-bottom: 2rem;\n`;\n_c2 = PageHeader;\nconst Title = styled.h1`\n  font-size: 2rem;\n  margin-bottom: 0.5rem;\n  color: var(--text-light);\n`;\n_c3 = Title;\nconst Subtitle = styled.p`\n  color: var(--text-dim);\n  font-size: 1rem;\n  max-width: 800px;\n`;\n_c4 = Subtitle;\nconst DashboardGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 2rem;\n  \n  @media (min-width: 992px) {\n    grid-template-columns: 2fr 1fr;\n  }\n`;\n_c5 = DashboardGrid;\nconst DashboardSection = styled.div`\n  margin-bottom: 2rem;\n`;\n_c6 = DashboardSection;\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  color: var(--text-light);\n`;\n_c7 = SectionTitle;\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 16px;\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n`;\n_c8 = Card;\nconst InsightCard = styled(Card)`\n  border-left: 4px solid ${props => props.color || 'var(--primary-color)'};\n  transition: transform 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n_c9 = InsightCard;\nconst InsightTitle = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n  color: ${props => props.color || 'var(--text-light)'};\n`;\n_c10 = InsightTitle;\nconst InsightContent = styled.p`\n  color: var(--text-dim);\n  line-height: 1.6;\n`;\n_c11 = InsightContent;\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n`;\n_c12 = StatsGrid;\nconst StatCard = styled.div`\n  background: ${props => props.positive ? 'rgba(0, 196, 159, 0.1)' : props.negative ? 'rgba(255, 128, 66, 0.1)' : 'rgba(255, 255, 255, 0.05)'};\n  padding: 1rem;\n  border-radius: 8px;\n  text-align: center;\n`;\n_c13 = StatCard;\nconst StatLabel = styled.div`\n  font-size: 0.9rem;\n  color: var(--text-dim);\n  margin-bottom: 0.5rem;\n`;\n_c14 = StatLabel;\nconst StatValue = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${props => props.positive ? 'var(--success-color)' : props.negative ? 'var(--warning-color)' : 'var(--text-light)'};\n`;\n_c15 = StatValue;\nconst Button = styled.button`\n  background: var(--primary-color);\n  color: white;\n  padding: 0.8rem 1.5rem;\n  border-radius: 8px;\n  border: none;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: block;\n  width: 100%;\n  margin-top: 1rem;\n  \n  &:hover {\n    background: var(--secondary-color);\n    transform: translateY(-3px);\n  }\n`;\n_c16 = Button;\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 3rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 16px;\n  backdrop-filter: blur(10px);\n`;\n_c17 = EmptyState;\nconst EmptyStateTitle = styled.h3`\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`;\n_c18 = EmptyStateTitle;\nconst EmptyStateIcon = styled.div`\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  color: var(--primary-color);\n`;\n_c19 = EmptyStateIcon;\nconst DashboardPage = () => {\n  _s();\n  const {\n    userFinancialData,\n    dreamLifeText,\n    loading,\n    error\n  } = useData();\n  // No currentUser needed\n  const navigate = useNavigate();\n\n  // Helper function to format currency\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  // Generate insights based on financial data\n  const generateInsights = data => {\n    if (!data) return [];\n    const insights = [];\n\n    // Dam level insight (based on net worth)\n    let damLevelStatus = '';\n    let damLevelColor = '';\n    if (data.netWorth <= 0) {\n      damLevelStatus = 'Critical';\n      damLevelColor = 'rgba(255, 99, 71, 1)'; // Red\n      insights.push({\n        title: 'Dam Level Status: Critical',\n        content: 'Your dam is nearly empty. Focus on reducing debt and building savings to prevent financial drought.',\n        color: damLevelColor\n      });\n    } else if (data.netWorth < data.assets.totalAssets * 0.3) {\n      damLevelStatus = 'Low';\n      damLevelColor = 'rgba(255, 165, 0, 1)'; // Orange\n      insights.push({\n        title: 'Dam Level Status: Low',\n        content: 'Your dam level is low. Consider increasing income sources and reducing non-essential expenses to build your financial reservoir.',\n        color: damLevelColor\n      });\n    } else if (data.netWorth < data.assets.totalAssets * 0.6) {\n      damLevelStatus = 'Moderate';\n      damLevelColor = 'rgba(255, 255, 0, 1)'; // Yellow\n      insights.push({\n        title: 'Dam Level Status: Moderate',\n        content: 'Your dam is at a moderate level. You\\'re doing well, but could benefit from increasing savings and investments to prepare for future needs.',\n        color: damLevelColor\n      });\n    } else {\n      damLevelStatus = 'Good';\n      damLevelColor = 'rgba(0, 196, 159, 1)'; // Green\n      insights.push({\n        title: 'Dam Level Status: Good',\n        content: 'Your dam is well-filled. Consider strategies to optimize your investments and plan for long-term goals with your strong financial foundation.',\n        color: damLevelColor\n      });\n    }\n\n    // Water flow insight (based on cash flow)\n    if (data.monthlyCashFlow < 0) {\n      insights.push({\n        title: 'Water Flow Analysis: Negative Flow',\n        content: `Your dam is losing water at a rate of ${formatCurrency(Math.abs(data.monthlyCashFlow))} per month. Look for expenses to reduce or ways to increase your income.`,\n        color: 'rgba(255, 99, 71, 1)'\n      });\n    } else if (data.monthlyCashFlow < data.income.totalIncome * 0.1) {\n      insights.push({\n        title: 'Water Flow Analysis: Minimal Flow',\n        content: `You're retaining water but at a minimal rate (${formatCurrency(data.monthlyCashFlow)} per month). Try to increase your savings rate to at least 20% of income.`,\n        color: 'rgba(255, 165, 0, 1)'\n      });\n    } else if (data.monthlyCashFlow < data.income.totalIncome * 0.3) {\n      insights.push({\n        title: 'Water Flow Analysis: Positive Flow',\n        content: `Good job! Your dam is filling at a rate of ${formatCurrency(data.monthlyCashFlow)} per month. Consider investing this surplus for long-term growth.`,\n        color: 'rgba(255, 255, 0, 1)'\n      });\n    } else {\n      insights.push({\n        title: 'Water Flow Analysis: Excellent Flow',\n        content: `Excellent! Your dam is filling rapidly at ${formatCurrency(data.monthlyCashFlow)} per month. Ensure you're investing this surplus optimally to maximize growth.`,\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    }\n\n    // Spending recommendation\n    const highestExpenseCategory = Object.entries(data.expenses).filter(([key]) => key !== 'totalExpenses').sort(([, a], [, b]) => b - a)[0];\n    if (highestExpenseCategory) {\n      const [category, amount] = highestExpenseCategory;\n      const percentage = (amount / data.expenses.totalExpenses * 100).toFixed(1);\n      insights.push({\n        title: 'Gate Control Recommendation',\n        content: `Your highest expense is ${category} at ${formatCurrency(amount)} (${percentage}% of total expenses). Consider if there are opportunities to reduce this outflow.`,\n        color: 'rgba(0, 136, 254, 1)'\n      });\n    }\n\n    // Debt ratio insight\n    if (data.debtToIncomeRatio > 50) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is high. Focus on reducing high-interest debt to relieve pressure on your financial dam.`,\n        color: 'rgba(255, 99, 71, 1)'\n      });\n    } else if (data.debtToIncomeRatio > 30) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is moderate. Continue paying down debt while maintaining savings.`,\n        color: 'rgba(255, 165, 0, 1)'\n      });\n    } else if (data.debtToIncomeRatio > 0) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is healthy. Your debt load is manageable and you're in a good position.`,\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    } else {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: 'You have no debt! Your financial dam has no pressure points. Focus on growing your assets and planning for the future.',\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    }\n    return insights;\n  };\n  const insights = generateInsights(userFinancialData);\n\n  // If loading, show spinner\n  if (loading && !userFinancialData) {\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        fullScreen: true,\n        text: \"Loading your financial dashboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If no data, show empty state\n  if (!userFinancialData) {\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Financial Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n          children: \"Your personal financial dam visualization and insights will appear here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmptyState, {\n        children: [/*#__PURE__*/_jsxDEV(EmptyStateIcon, {\n          children: \"\\uD83D\\uDCA7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmptyStateTitle, {\n          children: \"No Financial Data Yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Complete the financial questionnaire to see your personalized financial dam and insights.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/questionnaire'),\n          children: \"Complete Questionnaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Your Financial Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n        children: \"Here's a visualization of your current financial state as a water dam. Income flows in as rain while expenses flow out through streams.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DamVisualization, {\n      title: \"Your Financial Dam\",\n      description: \"A visualization of your current financial situation\",\n      financialData: {\n        totalAssets: userFinancialData.assets.totalAssets,\n        totalLiabilities: userFinancialData.liabilities.totalLiabilities,\n        netWorth: userFinancialData.netWorth,\n        monthlyIncome: userFinancialData.income.totalIncome,\n        monthlyExpenses: userFinancialData.expenses.totalExpenses\n      },\n      spendingCategories: userFinancialData.spendingCategories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DashboardGrid, {\n      children: [/*#__PURE__*/_jsxDEV(DashboardSection, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Financial Insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), insights.map((insight, index) => /*#__PURE__*/_jsxDEV(InsightCard, {\n          color: insight.color,\n          children: [/*#__PURE__*/_jsxDEV(InsightTitle, {\n            color: insight.color,\n            children: insight.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InsightContent, {\n            children: insight.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)), dreamLifeText && /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n            children: \"Your Dream Life\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'var(--text-dim)',\n              lineHeight: '1.6'\n            },\n            children: dreamLifeText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate('/future-scenarios'),\n            children: \"View Future Scenarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DashboardSection, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Key Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatsGrid, {\n          children: [/*#__PURE__*/_jsxDEV(StatCard, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Net Worth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n              children: formatCurrency(userFinancialData.netWorth)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            positive: userFinancialData.monthlyCashFlow > 0,\n            negative: userFinancialData.monthlyCashFlow < 0,\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Monthly Cash Flow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n              positive: userFinancialData.monthlyCashFlow > 0,\n              negative: userFinancialData.monthlyCashFlow < 0,\n              children: formatCurrency(userFinancialData.monthlyCashFlow)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Assets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n              children: formatCurrency(userFinancialData.assets.totalAssets)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            negative: userFinancialData.liabilities.totalLiabilities > 0,\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Debt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n              negative: userFinancialData.liabilities.totalLiabilities > 0,\n              children: formatCurrency(userFinancialData.liabilities.totalLiabilities)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n            children: \"Monthly Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Monthly Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n              positive: true,\n              children: formatCurrency(userFinancialData.income.totalIncome)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), userFinancialData.income.monthlyIncome > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '1rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Primary Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'var(--text-dim)'\n              },\n              children: formatCurrency(userFinancialData.income.monthlyIncome)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), userFinancialData.income.otherIncome > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '1rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Other Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'var(--text-dim)'\n              },\n              children: formatCurrency(userFinancialData.income.otherIncome)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/questionnaire'),\n          children: \"Update Financial Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/future-scenarios'),\n          style: {\n            marginTop: '1rem',\n            background: 'rgba(0, 196, 159, 0.8)'\n          },\n          children: \"Explore Future Scenarios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"8Cc0ezGFkbeY+JzqgpTcRp3uYN4=\", false, function () {\n  return [useData, useNavigate];\n});\n_c20 = DashboardPage;\nexport default DashboardPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"PageHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Subtitle\");\n$RefreshReg$(_c5, \"DashboardGrid\");\n$RefreshReg$(_c6, \"DashboardSection\");\n$RefreshReg$(_c7, \"SectionTitle\");\n$RefreshReg$(_c8, \"Card\");\n$RefreshReg$(_c9, \"InsightCard\");\n$RefreshReg$(_c10, \"InsightTitle\");\n$RefreshReg$(_c11, \"InsightContent\");\n$RefreshReg$(_c12, \"StatsGrid\");\n$RefreshReg$(_c13, \"StatCard\");\n$RefreshReg$(_c14, \"StatLabel\");\n$RefreshReg$(_c15, \"StatValue\");\n$RefreshReg$(_c16, \"Button\");\n$RefreshReg$(_c17, \"EmptyState\");\n$RefreshReg$(_c18, \"EmptyStateTitle\");\n$RefreshReg$(_c19, \"EmptyStateIcon\");\n$RefreshReg$(_c20, \"DashboardPage\");","map":{"version":3,"names":["React","styled","useNavigate","useData","DamVisualization","LoadingSpinner","jsxDEV","_jsxDEV","PageContainer","div","_c","PageHeader","_c2","Title","h1","_c3","Subtitle","p","_c4","DashboardGrid","_c5","DashboardSection","_c6","SectionTitle","h2","_c7","Card","_c8","InsightCard","props","color","_c9","InsightTitle","h3","_c10","InsightContent","_c11","StatsGrid","_c12","StatCard","positive","negative","_c13","StatLabel","_c14","StatValue","_c15","Button","button","_c16","EmptyState","_c17","EmptyStateTitle","_c18","EmptyStateIcon","_c19","DashboardPage","_s","userFinancialData","dreamLifeText","loading","error","navigate","formatCurrency","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","generateInsights","data","insights","damLevelStatus","damLevelColor","netWorth","push","title","content","assets","totalAssets","monthlyCashFlow","Math","abs","income","totalIncome","highestExpenseCategory","Object","entries","expenses","filter","key","sort","a","b","category","amount","percentage","totalExpenses","toFixed","debtToIncomeRatio","children","fullScreen","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","description","financialData","totalLiabilities","liabilities","monthlyIncome","monthlyExpenses","spendingCategories","map","insight","index","lineHeight","marginTop","otherIncome","background","_c20","$RefreshReg$"],"sources":["/Users/franksu/Documents/Personal projects /Captial_One_Hack_Knight/finance-dam-visualizer-new/src/pages/DashboardPage.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { useData } from '../context/DataContext';\n// No auth import needed\nimport DamVisualization from '../components/visualizations/DamVisualization';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\n\nconst PageContainer = styled.div`\n  padding: 2rem 1rem;\n  max-width: 1200px;\n  margin: 0 auto;\n  \n  @media (min-width: 768px) {\n    padding: 3rem 2rem;\n  }\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst Title = styled.h1`\n  font-size: 2rem;\n  margin-bottom: 0.5rem;\n  color: var(--text-light);\n`;\n\nconst Subtitle = styled.p`\n  color: var(--text-dim);\n  font-size: 1rem;\n  max-width: 800px;\n`;\n\nconst DashboardGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 2rem;\n  \n  @media (min-width: 992px) {\n    grid-template-columns: 2fr 1fr;\n  }\n`;\n\nconst DashboardSection = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  color: var(--text-light);\n`;\n\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 16px;\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n`;\n\nconst InsightCard = styled(Card)`\n  border-left: 4px solid ${props => props.color || 'var(--primary-color)'};\n  transition: transform 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n\nconst InsightTitle = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n  color: ${props => props.color || 'var(--text-light)'};\n`;\n\nconst InsightContent = styled.p`\n  color: var(--text-dim);\n  line-height: 1.6;\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst StatCard = styled.div`\n  background: ${props => props.positive ? 'rgba(0, 196, 159, 0.1)' : props.negative ? 'rgba(255, 128, 66, 0.1)' : 'rgba(255, 255, 255, 0.05)'};\n  padding: 1rem;\n  border-radius: 8px;\n  text-align: center;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.9rem;\n  color: var(--text-dim);\n  margin-bottom: 0.5rem;\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${props => props.positive ? 'var(--success-color)' : props.negative ? 'var(--warning-color)' : 'var(--text-light)'};\n`;\n\nconst Button = styled.button`\n  background: var(--primary-color);\n  color: white;\n  padding: 0.8rem 1.5rem;\n  border-radius: 8px;\n  border: none;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: block;\n  width: 100%;\n  margin-top: 1rem;\n  \n  &:hover {\n    background: var(--secondary-color);\n    transform: translateY(-3px);\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 3rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 16px;\n  backdrop-filter: blur(10px);\n`;\n\nconst EmptyStateTitle = styled.h3`\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`;\n\nconst EmptyStateIcon = styled.div`\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  color: var(--primary-color);\n`;\n\nconst DashboardPage = () => {\n  const { userFinancialData, dreamLifeText, loading, error } = useData();\n  // No currentUser needed\n  const navigate = useNavigate();\n  \n  // Helper function to format currency\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n  \n  // Generate insights based on financial data\n  const generateInsights = (data) => {\n    if (!data) return [];\n    \n    const insights = [];\n    \n    // Dam level insight (based on net worth)\n    let damLevelStatus = '';\n    let damLevelColor = '';\n    \n    if (data.netWorth <= 0) {\n      damLevelStatus = 'Critical';\n      damLevelColor = 'rgba(255, 99, 71, 1)'; // Red\n      insights.push({\n        title: 'Dam Level Status: Critical',\n        content: 'Your dam is nearly empty. Focus on reducing debt and building savings to prevent financial drought.',\n        color: damLevelColor\n      });\n    } else if (data.netWorth < data.assets.totalAssets * 0.3) {\n      damLevelStatus = 'Low';\n      damLevelColor = 'rgba(255, 165, 0, 1)'; // Orange\n      insights.push({\n        title: 'Dam Level Status: Low',\n        content: 'Your dam level is low. Consider increasing income sources and reducing non-essential expenses to build your financial reservoir.',\n        color: damLevelColor\n      });\n    } else if (data.netWorth < data.assets.totalAssets * 0.6) {\n      damLevelStatus = 'Moderate';\n      damLevelColor = 'rgba(255, 255, 0, 1)'; // Yellow\n      insights.push({\n        title: 'Dam Level Status: Moderate',\n        content: 'Your dam is at a moderate level. You\\'re doing well, but could benefit from increasing savings and investments to prepare for future needs.',\n        color: damLevelColor\n      });\n    } else {\n      damLevelStatus = 'Good';\n      damLevelColor = 'rgba(0, 196, 159, 1)'; // Green\n      insights.push({\n        title: 'Dam Level Status: Good',\n        content: 'Your dam is well-filled. Consider strategies to optimize your investments and plan for long-term goals with your strong financial foundation.',\n        color: damLevelColor\n      });\n    }\n    \n    // Water flow insight (based on cash flow)\n    if (data.monthlyCashFlow < 0) {\n      insights.push({\n        title: 'Water Flow Analysis: Negative Flow',\n        content: `Your dam is losing water at a rate of ${formatCurrency(Math.abs(data.monthlyCashFlow))} per month. Look for expenses to reduce or ways to increase your income.`,\n        color: 'rgba(255, 99, 71, 1)'\n      });\n    } else if (data.monthlyCashFlow < data.income.totalIncome * 0.1) {\n      insights.push({\n        title: 'Water Flow Analysis: Minimal Flow',\n        content: `You're retaining water but at a minimal rate (${formatCurrency(data.monthlyCashFlow)} per month). Try to increase your savings rate to at least 20% of income.`,\n        color: 'rgba(255, 165, 0, 1)'\n      });\n    } else if (data.monthlyCashFlow < data.income.totalIncome * 0.3) {\n      insights.push({\n        title: 'Water Flow Analysis: Positive Flow',\n        content: `Good job! Your dam is filling at a rate of ${formatCurrency(data.monthlyCashFlow)} per month. Consider investing this surplus for long-term growth.`,\n        color: 'rgba(255, 255, 0, 1)'\n      });\n    } else {\n      insights.push({\n        title: 'Water Flow Analysis: Excellent Flow',\n        content: `Excellent! Your dam is filling rapidly at ${formatCurrency(data.monthlyCashFlow)} per month. Ensure you're investing this surplus optimally to maximize growth.`,\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    }\n    \n    // Spending recommendation\n    const highestExpenseCategory = Object.entries(data.expenses)\n      .filter(([key]) => key !== 'totalExpenses')\n      .sort(([, a], [, b]) => b - a)[0];\n    \n    if (highestExpenseCategory) {\n      const [category, amount] = highestExpenseCategory;\n      const percentage = ((amount / data.expenses.totalExpenses) * 100).toFixed(1);\n      \n      insights.push({\n        title: 'Gate Control Recommendation',\n        content: `Your highest expense is ${category} at ${formatCurrency(amount)} (${percentage}% of total expenses). Consider if there are opportunities to reduce this outflow.`,\n        color: 'rgba(0, 136, 254, 1)'\n      });\n    }\n    \n    // Debt ratio insight\n    if (data.debtToIncomeRatio > 50) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is high. Focus on reducing high-interest debt to relieve pressure on your financial dam.`,\n        color: 'rgba(255, 99, 71, 1)'\n      });\n    } else if (data.debtToIncomeRatio > 30) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is moderate. Continue paying down debt while maintaining savings.`,\n        color: 'rgba(255, 165, 0, 1)'\n      });\n    } else if (data.debtToIncomeRatio > 0) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is healthy. Your debt load is manageable and you're in a good position.`,\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    } else {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: 'You have no debt! Your financial dam has no pressure points. Focus on growing your assets and planning for the future.',\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    }\n    \n    return insights;\n  };\n  \n  const insights = generateInsights(userFinancialData);\n  \n  // If loading, show spinner\n  if (loading && !userFinancialData) {\n    return (\n      <PageContainer>\n        <LoadingSpinner fullScreen text=\"Loading your financial dashboard...\" />\n      </PageContainer>\n    );\n  }\n  \n  // If no data, show empty state\n  if (!userFinancialData) {\n    return (\n      <PageContainer>\n        <PageHeader>\n          <Title>Financial Dashboard</Title>\n          <Subtitle>\n            Your personal financial dam visualization and insights will appear here.\n          </Subtitle>\n        </PageHeader>\n        \n        <EmptyState>\n          <EmptyStateIcon>💧</EmptyStateIcon>\n          <EmptyStateTitle>No Financial Data Yet</EmptyStateTitle>\n          <p>\n            Complete the financial questionnaire to see your personalized financial dam and insights.\n          </p>\n          <Button onClick={() => navigate('/questionnaire')}>\n            Complete Questionnaire\n          </Button>\n        </EmptyState>\n      </PageContainer>\n    );\n  }\n  \n  return (\n    <PageContainer>\n      <PageHeader>\n        <Title>Your Financial Dashboard</Title>\n        <Subtitle>\n          Here's a visualization of your current financial state as a water dam.\n          Income flows in as rain while expenses flow out through streams.\n        </Subtitle>\n      </PageHeader>\n      \n      <DamVisualization \n        title=\"Your Financial Dam\"\n        description=\"A visualization of your current financial situation\"\n        financialData={{\n          totalAssets: userFinancialData.assets.totalAssets,\n          totalLiabilities: userFinancialData.liabilities.totalLiabilities,\n          netWorth: userFinancialData.netWorth,\n          monthlyIncome: userFinancialData.income.totalIncome,\n          monthlyExpenses: userFinancialData.expenses.totalExpenses\n        }}\n        spendingCategories={userFinancialData.spendingCategories}\n      />\n      \n      <DashboardGrid>\n        <DashboardSection>\n          <SectionTitle>Financial Insights</SectionTitle>\n          {insights.map((insight, index) => (\n            <InsightCard key={index} color={insight.color}>\n              <InsightTitle color={insight.color}>{insight.title}</InsightTitle>\n              <InsightContent>{insight.content}</InsightContent>\n            </InsightCard>\n          ))}\n          \n          {dreamLifeText && (\n            <Card>\n              <SectionTitle>Your Dream Life</SectionTitle>\n              <p style={{ color: 'var(--text-dim)', lineHeight: '1.6' }}>\n                {dreamLifeText}\n              </p>\n              <Button onClick={() => navigate('/future-scenarios')}>\n                View Future Scenarios\n              </Button>\n            </Card>\n          )}\n        </DashboardSection>\n        \n        <DashboardSection>\n          <SectionTitle>Key Metrics</SectionTitle>\n          <StatsGrid>\n            <StatCard>\n              <StatLabel>Net Worth</StatLabel>\n              <StatValue>\n                {formatCurrency(userFinancialData.netWorth)}\n              </StatValue>\n            </StatCard>\n            \n            <StatCard positive={userFinancialData.monthlyCashFlow > 0} negative={userFinancialData.monthlyCashFlow < 0}>\n              <StatLabel>Monthly Cash Flow</StatLabel>\n              <StatValue positive={userFinancialData.monthlyCashFlow > 0} negative={userFinancialData.monthlyCashFlow < 0}>\n                {formatCurrency(userFinancialData.monthlyCashFlow)}\n              </StatValue>\n            </StatCard>\n            \n            <StatCard>\n              <StatLabel>Total Assets</StatLabel>\n              <StatValue>\n                {formatCurrency(userFinancialData.assets.totalAssets)}\n              </StatValue>\n            </StatCard>\n            \n            <StatCard negative={userFinancialData.liabilities.totalLiabilities > 0}>\n              <StatLabel>Total Debt</StatLabel>\n              <StatValue negative={userFinancialData.liabilities.totalLiabilities > 0}>\n                {formatCurrency(userFinancialData.liabilities.totalLiabilities)}\n              </StatValue>\n            </StatCard>\n          </StatsGrid>\n          \n          <Card>\n            <SectionTitle>Monthly Income</SectionTitle>\n            <StatCard>\n              <StatLabel>Total Monthly Income</StatLabel>\n              <StatValue positive>\n                {formatCurrency(userFinancialData.income.totalIncome)}\n              </StatValue>\n            </StatCard>\n            \n            {userFinancialData.income.monthlyIncome > 0 && (\n              <div style={{ marginTop: '1rem' }}>\n                <StatLabel>Primary Income</StatLabel>\n                <p style={{ color: 'var(--text-dim)' }}>\n                  {formatCurrency(userFinancialData.income.monthlyIncome)}\n                </p>\n              </div>\n            )}\n            \n            {userFinancialData.income.otherIncome > 0 && (\n              <div style={{ marginTop: '1rem' }}>\n                <StatLabel>Other Income</StatLabel>\n                <p style={{ color: 'var(--text-dim)' }}>\n                  {formatCurrency(userFinancialData.income.otherIncome)}\n                </p>\n              </div>\n            )}\n          </Card>\n          \n          <Button onClick={() => navigate('/questionnaire')}>\n            Update Financial Data\n          </Button>\n          \n          <Button onClick={() => navigate('/future-scenarios')} style={{ marginTop: '1rem', background: 'rgba(0, 196, 159, 0.8)' }}>\n            Explore Future Scenarios\n          </Button>\n        </DashboardSection>\n      </DashboardGrid>\n    </PageContainer>\n  );\n};\n\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}