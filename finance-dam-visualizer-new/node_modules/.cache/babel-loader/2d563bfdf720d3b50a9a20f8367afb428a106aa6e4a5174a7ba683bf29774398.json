{"ast":null,"code":"var _jsxFileName = \"/Users/franksu/Documents/Personal projects /hackathon 1 /Captial_One_Hack_Knight/finance-dam-visualizer-new/src/pages/DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { useData } from '../context/DataContext';\n// No auth import needed\nimport DamVisualization from '../components/visualizations/DamVisualization';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  padding: 2rem 1rem;\n  max-width: 1200px;\n  margin: 0 auto;\n  \n  @media (min-width: 768px) {\n    padding: 3rem 2rem;\n  }\n`;\n_c = PageContainer;\nconst PageHeader = styled.div`\n  margin-bottom: 2rem;\n`;\n_c2 = PageHeader;\nconst Title = styled.h1`\n  font-size: 2rem;\n  margin-bottom: 0.5rem;\n  color: var(--text-light);\n`;\n_c3 = Title;\nconst Subtitle = styled.p`\n  color: var(--text-dim);\n  font-size: 1rem;\n  max-width: 800px;\n`;\n_c4 = Subtitle;\nconst DashboardGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 2rem;\n  \n  @media (min-width: 992px) {\n    grid-template-columns: 2fr 1fr;\n  }\n`;\n_c5 = DashboardGrid;\nconst DashboardSection = styled.div`\n  margin-bottom: 2rem;\n`;\n_c6 = DashboardSection;\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  color: var(--text-light);\n`;\n_c7 = SectionTitle;\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 16px;\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n`;\n_c8 = Card;\nconst InsightCard = styled(Card)`\n  border-left: 4px solid ${props => props.color || 'var(--primary-color)'};\n  transition: transform 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n_c9 = InsightCard;\nconst InsightTitle = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n  color: ${props => props.color || 'var(--text-light)'};\n`;\n_c10 = InsightTitle;\nconst InsightContent = styled.p`\n  color: var(--text-dim);\n  line-height: 1.6;\n`;\n_c11 = InsightContent;\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n`;\n_c12 = StatsGrid;\nconst StatCard = styled.div`\n  background: ${props => props.positive ? 'rgba(0, 196, 159, 0.1)' : props.negative ? 'rgba(255, 128, 66, 0.1)' : 'rgba(255, 255, 255, 0.05)'};\n  padding: 1rem;\n  border-radius: 8px;\n  text-align: center;\n`;\n_c13 = StatCard;\nconst StatLabel = styled.div`\n  font-size: 0.9rem;\n  color: var(--text-dim);\n  margin-bottom: 0.5rem;\n`;\n_c14 = StatLabel;\nconst StatValue = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${props => props.positive ? 'var(--success-color)' : props.negative ? 'var(--warning-color)' : 'var(--text-light)'};\n`;\n_c15 = StatValue;\nconst Button = styled.button`\n  background: var(--primary-color);\n  color: white;\n  padding: 0.8rem 1.5rem;\n  border-radius: 8px;\n  border: none;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: block;\n  width: 100%;\n  margin-top: 1rem;\n  \n  &:hover {\n    background: var(--secondary-color);\n    transform: translateY(-3px);\n  }\n`;\n_c16 = Button;\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 3rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 16px;\n  backdrop-filter: blur(10px);\n`;\n_c17 = EmptyState;\nconst EmptyStateTitle = styled.h3`\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`;\n_c18 = EmptyStateTitle;\nconst EmptyStateIcon = styled.div`\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  color: var(--primary-color);\n`;\n_c19 = EmptyStateIcon;\nconst DashboardPage = () => {\n  _s();\n  const {\n    userFinancialData,\n    dreamLifeText,\n    loading,\n    error\n  } = useData();\n\n  // Create a local function to handle setting financial data in localStorage\n  const setLocalFinancialData = data => {\n    localStorage.setItem('userFinancialData', JSON.stringify(data));\n    // Note: we can't set the data in context directly since the setter isn't exposed\n  };\n  const navigate = useNavigate();\n  const [localLoading, setLocalLoading] = React.useState(true);\n\n  // Check localStorage for data if context is empty\n  React.useEffect(() => {\n    // If we already have data in context, we're good\n    if (userFinancialData) {\n      setLocalLoading(false);\n      return;\n    }\n    try {\n      // Try to load from localStorage\n      const storedData = localStorage.getItem('userFinancialData');\n      const storedDreamText = localStorage.getItem('dreamLifeText');\n      if (storedData) {\n        // Parse the localStorage data\n        const parsedData = JSON.parse(storedData);\n        console.log(\"Dashboard: Found data in localStorage:\", parsedData);\n\n        // Note: We can't update the context directly, but we use this for the UI to rerender\n        window.financialData = parsedData;\n      }\n      if (storedDreamText) {\n        // Store in window object for UI to access\n        window.dreamLifeText = storedDreamText;\n      }\n    } catch (err) {\n      console.error(\"Error loading from localStorage:\", err);\n    } finally {\n      setLocalLoading(false);\n    }\n  }, []);\n\n  // Helper function to format currency\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  // Generate insights based on financial data\n  const generateInsights = data => {\n    if (!data) return [];\n    const insights = [];\n\n    // Dam level insight (based on net worth)\n    let damLevelStatus = '';\n    let damLevelColor = '';\n    if (data.netWorth <= 0) {\n      damLevelStatus = 'Critical';\n      damLevelColor = 'rgba(255, 99, 71, 1)'; // Red\n      insights.push({\n        title: 'Dam Level Status: Critical',\n        content: 'Your dam is nearly empty. Focus on reducing debt and building savings to prevent financial drought.',\n        color: damLevelColor\n      });\n    } else if (data.netWorth < data.assets.totalAssets * 0.3) {\n      damLevelStatus = 'Low';\n      damLevelColor = 'rgba(255, 165, 0, 1)'; // Orange\n      insights.push({\n        title: 'Dam Level Status: Low',\n        content: 'Your dam level is low. Consider increasing income sources and reducing non-essential expenses to build your financial reservoir.',\n        color: damLevelColor\n      });\n    } else if (data.netWorth < data.assets.totalAssets * 0.6) {\n      damLevelStatus = 'Moderate';\n      damLevelColor = 'rgba(255, 255, 0, 1)'; // Yellow\n      insights.push({\n        title: 'Dam Level Status: Moderate',\n        content: 'Your dam is at a moderate level. You\\'re doing well, but could benefit from increasing savings and investments to prepare for future needs.',\n        color: damLevelColor\n      });\n    } else {\n      damLevelStatus = 'Good';\n      damLevelColor = 'rgba(0, 196, 159, 1)'; // Green\n      insights.push({\n        title: 'Dam Level Status: Good',\n        content: 'Your dam is well-filled. Consider strategies to optimize your investments and plan for long-term goals with your strong financial foundation.',\n        color: damLevelColor\n      });\n    }\n\n    // Water flow insight (based on cash flow)\n    if (data.monthlyCashFlow < 0) {\n      insights.push({\n        title: 'Water Flow Analysis: Negative Flow',\n        content: `Your dam is losing water at a rate of ${formatCurrency(Math.abs(data.monthlyCashFlow))} per month. Look for expenses to reduce or ways to increase your income.`,\n        color: 'rgba(255, 99, 71, 1)'\n      });\n    } else if (data.monthlyCashFlow < data.income.totalIncome * 0.1) {\n      insights.push({\n        title: 'Water Flow Analysis: Minimal Flow',\n        content: `You're retaining water but at a minimal rate (${formatCurrency(data.monthlyCashFlow)} per month). Try to increase your savings rate to at least 20% of income.`,\n        color: 'rgba(255, 165, 0, 1)'\n      });\n    } else if (data.monthlyCashFlow < data.income.totalIncome * 0.3) {\n      insights.push({\n        title: 'Water Flow Analysis: Positive Flow',\n        content: `Good job! Your dam is filling at a rate of ${formatCurrency(data.monthlyCashFlow)} per month. Consider investing this surplus for long-term growth.`,\n        color: 'rgba(255, 255, 0, 1)'\n      });\n    } else {\n      insights.push({\n        title: 'Water Flow Analysis: Excellent Flow',\n        content: `Excellent! Your dam is filling rapidly at ${formatCurrency(data.monthlyCashFlow)} per month. Ensure you're investing this surplus optimally to maximize growth.`,\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    }\n\n    // Spending recommendation\n    const highestExpenseCategory = Object.entries(data.expenses).filter(([key]) => key !== 'totalExpenses').sort(([, a], [, b]) => b - a)[0];\n    if (highestExpenseCategory) {\n      const [category, amount] = highestExpenseCategory;\n      const percentage = (amount / data.expenses.totalExpenses * 100).toFixed(1);\n      insights.push({\n        title: 'Gate Control Recommendation',\n        content: `Your highest expense is ${category} at ${formatCurrency(amount)} (${percentage}% of total expenses). Consider if there are opportunities to reduce this outflow.`,\n        color: 'rgba(0, 136, 254, 1)'\n      });\n    }\n\n    // Debt ratio insight\n    if (data.debtToIncomeRatio > 50) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is high. Focus on reducing high-interest debt to relieve pressure on your financial dam.`,\n        color: 'rgba(255, 99, 71, 1)'\n      });\n    } else if (data.debtToIncomeRatio > 30) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is moderate. Continue paying down debt while maintaining savings.`,\n        color: 'rgba(255, 165, 0, 1)'\n      });\n    } else if (data.debtToIncomeRatio > 0) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is healthy. Your debt load is manageable and you're in a good position.`,\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    } else {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: 'You have no debt! Your financial dam has no pressure points. Focus on growing your assets and planning for the future.',\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    }\n    return insights;\n  };\n\n  // Use either context data or window data if available\n  const actualData = userFinancialData || window.financialData;\n\n  // Also handle dream life text similarly\n  const actualDreamText = dreamLifeText || window.dreamLifeText || localStorage.getItem('dreamLifeText');\n\n  // Only generate insights if we have data\n  const insights = actualData ? generateInsights(actualData) : [];\n\n  // If we had to use window.financialData, log it\n  if (!userFinancialData && window.financialData) {\n    console.log(\"Using window.financialData since context data is not available\");\n  }\n\n  // If loading, show spinner\n  if ((loading || localLoading) && !actualData) {\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        fullScreen: true,\n        text: \"Loading your financial dashboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Try one more direct check with localStorage before showing empty state\n  const checkLocalStorage = () => {\n    try {\n      const storedData = localStorage.getItem('userFinancialData');\n      if (storedData) {\n        // Parse and use for rendering (we can't set in context)\n        const parsedData = JSON.parse(storedData);\n        console.log(\"Last attempt to load data from localStorage:\", parsedData);\n        window.financialData = parsedData;\n        return parsedData;\n      }\n    } catch (err) {\n      console.error(\"Error in final localStorage check:\", err);\n    }\n    return null;\n  };\n\n  // If no data, show empty state (after one final localStorage check)\n  if (!actualData && !checkLocalStorage()) {\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Financial Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n          children: \"Your personal financial dam visualization and insights will appear here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmptyState, {\n        children: [/*#__PURE__*/_jsxDEV(EmptyStateIcon, {\n          children: \"\\uD83D\\uDCA7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmptyStateTitle, {\n          children: \"No Financial Data Yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Complete the financial questionnaire to see your personalized financial dam and insights.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/questionnaire'),\n          children: \"Complete Questionnaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Your Financial Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n        children: \"Here's a visualization of your current financial state as a water dam. Income flows in as rain while expenses flow out through streams.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DamVisualization, {\n      title: \"Your Financial Dam\",\n      description: \"A visualization of your current financial situation\",\n      financialData: {\n        totalAssets: actualData.assets.totalAssets,\n        totalLiabilities: actualData.liabilities.totalLiabilities,\n        netWorth: actualData.netWorth,\n        monthlyIncome: actualData.income.totalIncome,\n        monthlyExpenses: actualData.expenses.totalExpenses\n      },\n      spendingCategories: actualData.spendingCategories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DashboardGrid, {\n      children: [/*#__PURE__*/_jsxDEV(DashboardSection, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Financial Insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), insights.map((insight, index) => /*#__PURE__*/_jsxDEV(InsightCard, {\n          color: insight.color,\n          children: [/*#__PURE__*/_jsxDEV(InsightTitle, {\n            color: insight.color,\n            children: insight.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InsightContent, {\n            children: insight.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)), actualDreamText && /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n            children: \"Your Dream Life\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'var(--text-dim)',\n              lineHeight: '1.6'\n            },\n            children: actualDreamText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate('/future-scenarios'),\n            children: \"View Future Scenarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DashboardSection, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Key Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatsGrid, {\n          children: [/*#__PURE__*/_jsxDEV(StatCard, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Net Worth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n              children: formatCurrency(actualData.netWorth)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            positive: actualData.monthlyCashFlow > 0,\n            negative: actualData.monthlyCashFlow < 0,\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Monthly Cash Flow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n              positive: actualData.monthlyCashFlow > 0,\n              negative: actualData.monthlyCashFlow < 0,\n              children: formatCurrency(actualData.monthlyCashFlow)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Assets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n              children: formatCurrency(actualData.assets.totalAssets)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            negative: actualData.liabilities.totalLiabilities > 0,\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Debt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n              negative: actualData.liabilities.totalLiabilities > 0,\n              children: formatCurrency(actualData.liabilities.totalLiabilities)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n            children: \"Monthly Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Monthly Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatValue, {\n              positive: true,\n              children: formatCurrency(actualData.income.totalIncome)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), actualData.income.monthlyIncome > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '1rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Primary Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'var(--text-dim)'\n              },\n              children: formatCurrency(actualData.income.monthlyIncome)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), userFinancialData.income.otherIncome > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '1rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Other Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'var(--text-dim)'\n              },\n              children: formatCurrency(userFinancialData.income.otherIncome)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/questionnaire'),\n          children: \"Update Financial Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/future-scenarios'),\n          style: {\n            marginTop: '1rem',\n            background: 'rgba(0, 196, 159, 0.8)'\n          },\n          children: \"Explore Future Scenarios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"SgHkbpCohwC+d+gEMPAUvP/ITgY=\", false, function () {\n  return [useData, useNavigate];\n});\n_c20 = DashboardPage;\nexport default DashboardPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"PageHeader\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Subtitle\");\n$RefreshReg$(_c5, \"DashboardGrid\");\n$RefreshReg$(_c6, \"DashboardSection\");\n$RefreshReg$(_c7, \"SectionTitle\");\n$RefreshReg$(_c8, \"Card\");\n$RefreshReg$(_c9, \"InsightCard\");\n$RefreshReg$(_c10, \"InsightTitle\");\n$RefreshReg$(_c11, \"InsightContent\");\n$RefreshReg$(_c12, \"StatsGrid\");\n$RefreshReg$(_c13, \"StatCard\");\n$RefreshReg$(_c14, \"StatLabel\");\n$RefreshReg$(_c15, \"StatValue\");\n$RefreshReg$(_c16, \"Button\");\n$RefreshReg$(_c17, \"EmptyState\");\n$RefreshReg$(_c18, \"EmptyStateTitle\");\n$RefreshReg$(_c19, \"EmptyStateIcon\");\n$RefreshReg$(_c20, \"DashboardPage\");","map":{"version":3,"names":["React","styled","useNavigate","useData","DamVisualization","LoadingSpinner","jsxDEV","_jsxDEV","PageContainer","div","_c","PageHeader","_c2","Title","h1","_c3","Subtitle","p","_c4","DashboardGrid","_c5","DashboardSection","_c6","SectionTitle","h2","_c7","Card","_c8","InsightCard","props","color","_c9","InsightTitle","h3","_c10","InsightContent","_c11","StatsGrid","_c12","StatCard","positive","negative","_c13","StatLabel","_c14","StatValue","_c15","Button","button","_c16","EmptyState","_c17","EmptyStateTitle","_c18","EmptyStateIcon","_c19","DashboardPage","_s","userFinancialData","dreamLifeText","loading","error","setLocalFinancialData","data","localStorage","setItem","JSON","stringify","navigate","localLoading","setLocalLoading","useState","useEffect","storedData","getItem","storedDreamText","parsedData","parse","console","log","window","financialData","err","formatCurrency","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","generateInsights","insights","damLevelStatus","damLevelColor","netWorth","push","title","content","assets","totalAssets","monthlyCashFlow","Math","abs","income","totalIncome","highestExpenseCategory","Object","entries","expenses","filter","key","sort","a","b","category","amount","percentage","totalExpenses","toFixed","debtToIncomeRatio","actualData","actualDreamText","children","fullScreen","text","fileName","_jsxFileName","lineNumber","columnNumber","checkLocalStorage","onClick","description","totalLiabilities","liabilities","monthlyIncome","monthlyExpenses","spendingCategories","map","insight","index","lineHeight","marginTop","otherIncome","background","_c20","$RefreshReg$"],"sources":["/Users/franksu/Documents/Personal projects /hackathon 1 /Captial_One_Hack_Knight/finance-dam-visualizer-new/src/pages/DashboardPage.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { useData } from '../context/DataContext';\n// No auth import needed\nimport DamVisualization from '../components/visualizations/DamVisualization';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\n\nconst PageContainer = styled.div`\n  padding: 2rem 1rem;\n  max-width: 1200px;\n  margin: 0 auto;\n  \n  @media (min-width: 768px) {\n    padding: 3rem 2rem;\n  }\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst Title = styled.h1`\n  font-size: 2rem;\n  margin-bottom: 0.5rem;\n  color: var(--text-light);\n`;\n\nconst Subtitle = styled.p`\n  color: var(--text-dim);\n  font-size: 1rem;\n  max-width: 800px;\n`;\n\nconst DashboardGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 2rem;\n  \n  @media (min-width: 992px) {\n    grid-template-columns: 2fr 1fr;\n  }\n`;\n\nconst DashboardSection = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  color: var(--text-light);\n`;\n\nconst Card = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 16px;\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n`;\n\nconst InsightCard = styled(Card)`\n  border-left: 4px solid ${props => props.color || 'var(--primary-color)'};\n  transition: transform 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n\nconst InsightTitle = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n  color: ${props => props.color || 'var(--text-light)'};\n`;\n\nconst InsightContent = styled.p`\n  color: var(--text-dim);\n  line-height: 1.6;\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst StatCard = styled.div`\n  background: ${props => props.positive ? 'rgba(0, 196, 159, 0.1)' : props.negative ? 'rgba(255, 128, 66, 0.1)' : 'rgba(255, 255, 255, 0.05)'};\n  padding: 1rem;\n  border-radius: 8px;\n  text-align: center;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.9rem;\n  color: var(--text-dim);\n  margin-bottom: 0.5rem;\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${props => props.positive ? 'var(--success-color)' : props.negative ? 'var(--warning-color)' : 'var(--text-light)'};\n`;\n\nconst Button = styled.button`\n  background: var(--primary-color);\n  color: white;\n  padding: 0.8rem 1.5rem;\n  border-radius: 8px;\n  border: none;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: block;\n  width: 100%;\n  margin-top: 1rem;\n  \n  &:hover {\n    background: var(--secondary-color);\n    transform: translateY(-3px);\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 3rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 16px;\n  backdrop-filter: blur(10px);\n`;\n\nconst EmptyStateTitle = styled.h3`\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`;\n\nconst EmptyStateIcon = styled.div`\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  color: var(--primary-color);\n`;\n\nconst DashboardPage = () => {\n  const { userFinancialData, dreamLifeText, loading, error } = useData();\n  \n  // Create a local function to handle setting financial data in localStorage\n  const setLocalFinancialData = (data) => {\n    localStorage.setItem('userFinancialData', JSON.stringify(data));\n    // Note: we can't set the data in context directly since the setter isn't exposed\n  }\n  const navigate = useNavigate();\n  const [localLoading, setLocalLoading] = React.useState(true);\n  \n  // Check localStorage for data if context is empty\n  React.useEffect(() => {\n    // If we already have data in context, we're good\n    if (userFinancialData) {\n      setLocalLoading(false);\n      return;\n    }\n    \n    try {\n      // Try to load from localStorage\n      const storedData = localStorage.getItem('userFinancialData');\n      const storedDreamText = localStorage.getItem('dreamLifeText');\n      \n      if (storedData) {\n        // Parse the localStorage data\n        const parsedData = JSON.parse(storedData);\n        console.log(\"Dashboard: Found data in localStorage:\", parsedData);\n        \n        // Note: We can't update the context directly, but we use this for the UI to rerender\n        window.financialData = parsedData;\n      }\n      \n      if (storedDreamText) {\n        // Store in window object for UI to access\n        window.dreamLifeText = storedDreamText;\n      }\n    } catch (err) {\n      console.error(\"Error loading from localStorage:\", err);\n    } finally {\n      setLocalLoading(false);\n    }\n  }, []);\n  \n  // Helper function to format currency\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n  \n  // Generate insights based on financial data\n  const generateInsights = (data) => {\n    if (!data) return [];\n    \n    const insights = [];\n    \n    // Dam level insight (based on net worth)\n    let damLevelStatus = '';\n    let damLevelColor = '';\n    \n    if (data.netWorth <= 0) {\n      damLevelStatus = 'Critical';\n      damLevelColor = 'rgba(255, 99, 71, 1)'; // Red\n      insights.push({\n        title: 'Dam Level Status: Critical',\n        content: 'Your dam is nearly empty. Focus on reducing debt and building savings to prevent financial drought.',\n        color: damLevelColor\n      });\n    } else if (data.netWorth < data.assets.totalAssets * 0.3) {\n      damLevelStatus = 'Low';\n      damLevelColor = 'rgba(255, 165, 0, 1)'; // Orange\n      insights.push({\n        title: 'Dam Level Status: Low',\n        content: 'Your dam level is low. Consider increasing income sources and reducing non-essential expenses to build your financial reservoir.',\n        color: damLevelColor\n      });\n    } else if (data.netWorth < data.assets.totalAssets * 0.6) {\n      damLevelStatus = 'Moderate';\n      damLevelColor = 'rgba(255, 255, 0, 1)'; // Yellow\n      insights.push({\n        title: 'Dam Level Status: Moderate',\n        content: 'Your dam is at a moderate level. You\\'re doing well, but could benefit from increasing savings and investments to prepare for future needs.',\n        color: damLevelColor\n      });\n    } else {\n      damLevelStatus = 'Good';\n      damLevelColor = 'rgba(0, 196, 159, 1)'; // Green\n      insights.push({\n        title: 'Dam Level Status: Good',\n        content: 'Your dam is well-filled. Consider strategies to optimize your investments and plan for long-term goals with your strong financial foundation.',\n        color: damLevelColor\n      });\n    }\n    \n    // Water flow insight (based on cash flow)\n    if (data.monthlyCashFlow < 0) {\n      insights.push({\n        title: 'Water Flow Analysis: Negative Flow',\n        content: `Your dam is losing water at a rate of ${formatCurrency(Math.abs(data.monthlyCashFlow))} per month. Look for expenses to reduce or ways to increase your income.`,\n        color: 'rgba(255, 99, 71, 1)'\n      });\n    } else if (data.monthlyCashFlow < data.income.totalIncome * 0.1) {\n      insights.push({\n        title: 'Water Flow Analysis: Minimal Flow',\n        content: `You're retaining water but at a minimal rate (${formatCurrency(data.monthlyCashFlow)} per month). Try to increase your savings rate to at least 20% of income.`,\n        color: 'rgba(255, 165, 0, 1)'\n      });\n    } else if (data.monthlyCashFlow < data.income.totalIncome * 0.3) {\n      insights.push({\n        title: 'Water Flow Analysis: Positive Flow',\n        content: `Good job! Your dam is filling at a rate of ${formatCurrency(data.monthlyCashFlow)} per month. Consider investing this surplus for long-term growth.`,\n        color: 'rgba(255, 255, 0, 1)'\n      });\n    } else {\n      insights.push({\n        title: 'Water Flow Analysis: Excellent Flow',\n        content: `Excellent! Your dam is filling rapidly at ${formatCurrency(data.monthlyCashFlow)} per month. Ensure you're investing this surplus optimally to maximize growth.`,\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    }\n    \n    // Spending recommendation\n    const highestExpenseCategory = Object.entries(data.expenses)\n      .filter(([key]) => key !== 'totalExpenses')\n      .sort(([, a], [, b]) => b - a)[0];\n    \n    if (highestExpenseCategory) {\n      const [category, amount] = highestExpenseCategory;\n      const percentage = ((amount / data.expenses.totalExpenses) * 100).toFixed(1);\n      \n      insights.push({\n        title: 'Gate Control Recommendation',\n        content: `Your highest expense is ${category} at ${formatCurrency(amount)} (${percentage}% of total expenses). Consider if there are opportunities to reduce this outflow.`,\n        color: 'rgba(0, 136, 254, 1)'\n      });\n    }\n    \n    // Debt ratio insight\n    if (data.debtToIncomeRatio > 50) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is high. Focus on reducing high-interest debt to relieve pressure on your financial dam.`,\n        color: 'rgba(255, 99, 71, 1)'\n      });\n    } else if (data.debtToIncomeRatio > 30) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is moderate. Continue paying down debt while maintaining savings.`,\n        color: 'rgba(255, 165, 0, 1)'\n      });\n    } else if (data.debtToIncomeRatio > 0) {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: `Your debt-to-income ratio is ${data.debtToIncomeRatio.toFixed(1)}%, which is healthy. Your debt load is manageable and you're in a good position.`,\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    } else {\n      insights.push({\n        title: 'Financial Pressure Points',\n        content: 'You have no debt! Your financial dam has no pressure points. Focus on growing your assets and planning for the future.',\n        color: 'rgba(0, 196, 159, 1)'\n      });\n    }\n    \n    return insights;\n  };\n  \n  // Use either context data or window data if available\n  const actualData = userFinancialData || window.financialData;\n  \n  // Also handle dream life text similarly\n  const actualDreamText = dreamLifeText || window.dreamLifeText || localStorage.getItem('dreamLifeText');\n  \n  // Only generate insights if we have data\n  const insights = actualData ? generateInsights(actualData) : [];\n  \n  // If we had to use window.financialData, log it\n  if (!userFinancialData && window.financialData) {\n    console.log(\"Using window.financialData since context data is not available\");\n  }\n  \n  // If loading, show spinner\n  if ((loading || localLoading) && !actualData) {\n    return (\n      <PageContainer>\n        <LoadingSpinner fullScreen text=\"Loading your financial dashboard...\" />\n      </PageContainer>\n    );\n  }\n  \n  // Try one more direct check with localStorage before showing empty state\n  const checkLocalStorage = () => {\n    try {\n      const storedData = localStorage.getItem('userFinancialData');\n      if (storedData) {\n        // Parse and use for rendering (we can't set in context)\n        const parsedData = JSON.parse(storedData);\n        console.log(\"Last attempt to load data from localStorage:\", parsedData);\n        window.financialData = parsedData;\n        return parsedData;\n      }\n    } catch (err) {\n      console.error(\"Error in final localStorage check:\", err);\n    }\n    return null;\n  };\n  \n  // If no data, show empty state (after one final localStorage check)\n  if (!actualData && !checkLocalStorage()) {\n    return (\n      <PageContainer>\n        <PageHeader>\n          <Title>Financial Dashboard</Title>\n          <Subtitle>\n            Your personal financial dam visualization and insights will appear here.\n          </Subtitle>\n        </PageHeader>\n        \n        <EmptyState>\n          <EmptyStateIcon>💧</EmptyStateIcon>\n          <EmptyStateTitle>No Financial Data Yet</EmptyStateTitle>\n          <p>\n            Complete the financial questionnaire to see your personalized financial dam and insights.\n          </p>\n          <Button onClick={() => navigate('/questionnaire')}>\n            Complete Questionnaire\n          </Button>\n        </EmptyState>\n      </PageContainer>\n    );\n  }\n  \n  return (\n    <PageContainer>\n      <PageHeader>\n        <Title>Your Financial Dashboard</Title>\n        <Subtitle>\n          Here's a visualization of your current financial state as a water dam.\n          Income flows in as rain while expenses flow out through streams.\n        </Subtitle>\n      </PageHeader>\n      \n      <DamVisualization \n        title=\"Your Financial Dam\"\n        description=\"A visualization of your current financial situation\"\n        financialData={{\n          totalAssets: actualData.assets.totalAssets,\n          totalLiabilities: actualData.liabilities.totalLiabilities,\n          netWorth: actualData.netWorth,\n          monthlyIncome: actualData.income.totalIncome,\n          monthlyExpenses: actualData.expenses.totalExpenses\n        }}\n        spendingCategories={actualData.spendingCategories}\n      />\n      \n      <DashboardGrid>\n        <DashboardSection>\n          <SectionTitle>Financial Insights</SectionTitle>\n          {insights.map((insight, index) => (\n            <InsightCard key={index} color={insight.color}>\n              <InsightTitle color={insight.color}>{insight.title}</InsightTitle>\n              <InsightContent>{insight.content}</InsightContent>\n            </InsightCard>\n          ))}\n          \n          {actualDreamText && (\n            <Card>\n              <SectionTitle>Your Dream Life</SectionTitle>\n              <p style={{ color: 'var(--text-dim)', lineHeight: '1.6' }}>\n                {actualDreamText}\n              </p>\n              <Button onClick={() => navigate('/future-scenarios')}>\n                View Future Scenarios\n              </Button>\n            </Card>\n          )}\n        </DashboardSection>\n        \n        <DashboardSection>\n          <SectionTitle>Key Metrics</SectionTitle>\n          <StatsGrid>\n            <StatCard>\n              <StatLabel>Net Worth</StatLabel>\n              <StatValue>\n                {formatCurrency(actualData.netWorth)}\n              </StatValue>\n            </StatCard>\n            \n            <StatCard positive={actualData.monthlyCashFlow > 0} negative={actualData.monthlyCashFlow < 0}>\n              <StatLabel>Monthly Cash Flow</StatLabel>\n              <StatValue positive={actualData.monthlyCashFlow > 0} negative={actualData.monthlyCashFlow < 0}>\n                {formatCurrency(actualData.monthlyCashFlow)}\n              </StatValue>\n            </StatCard>\n            \n            <StatCard>\n              <StatLabel>Total Assets</StatLabel>\n              <StatValue>\n                {formatCurrency(actualData.assets.totalAssets)}\n              </StatValue>\n            </StatCard>\n            \n            <StatCard negative={actualData.liabilities.totalLiabilities > 0}>\n              <StatLabel>Total Debt</StatLabel>\n              <StatValue negative={actualData.liabilities.totalLiabilities > 0}>\n                {formatCurrency(actualData.liabilities.totalLiabilities)}\n              </StatValue>\n            </StatCard>\n          </StatsGrid>\n          \n          <Card>\n            <SectionTitle>Monthly Income</SectionTitle>\n            <StatCard>\n              <StatLabel>Total Monthly Income</StatLabel>\n              <StatValue positive>\n                {formatCurrency(actualData.income.totalIncome)}\n              </StatValue>\n            </StatCard>\n            \n            {actualData.income.monthlyIncome > 0 && (\n              <div style={{ marginTop: '1rem' }}>\n                <StatLabel>Primary Income</StatLabel>\n                <p style={{ color: 'var(--text-dim)' }}>\n                  {formatCurrency(actualData.income.monthlyIncome)}\n                </p>\n              </div>\n            )}\n            \n            {userFinancialData.income.otherIncome > 0 && (\n              <div style={{ marginTop: '1rem' }}>\n                <StatLabel>Other Income</StatLabel>\n                <p style={{ color: 'var(--text-dim)' }}>\n                  {formatCurrency(userFinancialData.income.otherIncome)}\n                </p>\n              </div>\n            )}\n          </Card>\n          \n          <Button onClick={() => navigate('/questionnaire')}>\n            Update Financial Data\n          </Button>\n          \n          <Button onClick={() => navigate('/future-scenarios')} style={{ marginTop: '1rem', background: 'rgba(0, 196, 159, 0.8)' }}>\n            Explore Future Scenarios\n          </Button>\n        </DashboardSection>\n      </DashboardGrid>\n    </PageContainer>\n  );\n};\n\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}